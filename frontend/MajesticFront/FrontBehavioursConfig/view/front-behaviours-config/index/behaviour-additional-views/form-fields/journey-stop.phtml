<?php
//check the form field type
if (is_object($this->objFormFieldElement))
{
	if (is_numeric($this->objFormFieldElement->get("field_std_id")))
	{
		//standard field
		$field_input_type = strtolower($this->objFormFieldElement->get("field_std_input_type"));
		$field_type = "standard";
		$field_id = $this->objFormFieldElement->get("field_std_id");
		$field_label = $this->objFormFieldElement->get("field_std_description");
	} else {
		//custom field
		$field_input_type = strtolower($this->objFormFieldElement->get("field_custom_input_type"));
		$field_type = "custom";
		$field_id = $this->objFormFieldElement->get("field_custom_id");
		$field_label = $this->objFormFieldElement->get("field_custom_description");
	}//end if
}//end if

//set field label
$arr_options = $this->form->get("field_value")->getOptions();
$arr_options["label"] = $field_label . " value equals";
$this->form->get("field_value")->setOptions($arr_options);

//set field types to be allowed
$arr_field_types = array(
		"select",
		"radio",
		"checkbox",
);

switch ($field_type)
{
	case "checkbox":
		$this->form->get("field_value")->setValueOptions(array(
			1 => "Checked",
			0 => "Unchecked",
		));
		break;
}//end switch
?>

<?php 
//only generate js where field is allowed
if (in_array($field_input_type, $arr_field_types)) :?>
<script type="text/javascript">
	//specify global vars
	var field_input_type = "<?php echo $field_input_type;?>";
	var field_type = "<?php echo $field_type;?>";
	var fields_all_id = <?php echo $this->objFormFieldElement->get("id");?>;
	
	jQuery(document).ready(function () {
		if (field_input_type == "select" || field_input_type == "radio")
		{
			//amend the field operator values
			jQuery("#field_operator").empty();
			jQuery("#field_operator").append(new Option("is eqaul to", "equals"));
			jQuery("#field_operator").append(new Option("is not eqaul to", "notequal"));
			
			//request field values defined
			jQuery.ajax({
			    type: 'GET',
			    url: "<?php echo $this->url("front-form-admin/fields", array("action" => "ajax-load-specified-field-values", "id" => $field_id));?>?field_type=" + field_type + "&fields_all_id=" + fields_all_id + "&include_field_values=1",
			    dataType: 'json',
			    async: false,
			    success: function (data) {					    
					//convert data received to array
					jQuery.each(data.field_values_data, function (id, field_value) {
						jQuery("#field_value").append(new Option(field_value, id));
					});
			    },
			    fail: function () {
					alert("Data could not be loaded");
					return false;
			    }
			});
		}//end if

		if (field_input_type == "checkbox")
		{
			//amend the field operator values
			jQuery("#field_operator").empty();
			jQuery("#field_operator").append(new Option("is checked", "checked"));
			jQuery("#field_operator").append(new Option("is not checked", "notchecked"));
		}//end if
	});
</script>
<?php endif?>