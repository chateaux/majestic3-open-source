<script type="text/javascript">
	var global_page_config = {
		pageTitle: '<?php echo $this->renderStandardViewHeader(ICON_LARGE_COMMS_HTML .'&nbsp; My Journeys'); ?>',
		cdnLocation: '<?php echo $this->layout()->cdn_url; ?>',
		pagination: {qp_limit: 20}
	};

	var global_tinymce_replace_fields_container = jQuery.parseJSON('<?php echo $this->arr_replace_fields;?>');
	var global_tinymce_profile_images = jQuery.parseJSON('<?php echo $this->arr_profile_images;?>');
</script>

<style>
    .node {
        cursor: pointer;
    }

    .node circle {
      fill: #fff;
      stroke: #99ccff;;
      stroke-width: 3px;
    }

    .node text {
      font: 12px sans-serif;
    }

    .link {
      fill: none;
      stroke: #99ccff;
      stroke-width: 2px;
    }

	.hyper {
	    color: red;
	    text-decoration: underline;
	}

	.hyper:hover {
	    color:yellow;
	    text-decoration: none;
	}
	.selected {
	  font-weight:bold;
	}
	.not-selected {
	  font-weight:normal;
	}
</style>
<script src="<?php echo $this->layout()->cdn_url;?>/js/vendor/d3/d3.min.js"></script>
<!-- 
<script src="//gabelerner.github.io/canvg/rgbcolor.js"></script>
<script src="//gabelerner.github.io/canvg/StackBlur.js"></script>
<script src="//gabelerner.github.io/canvg/canvg.js"></script>
-->
		
<script type="text/javascript">
//https://mohansun-canvas.herokuapp.com/content/training/
function buildJourneyDiagram(objData) {
	var margin = {top: 20, right: 120, bottom: 20, left:100},
	    width = 12000 - margin.right - margin.left,
	    height = 1500 - margin.top - margin.bottom;
	    
	var i = 0,
	    duration = 750,
	    root;

	var tree = d3.layout.tree()
	    .size([height, width]);

	var diagonal = d3.svg.diagonal()
	    .projection(function(d) { return [d.y, d.x]; });

	var svg = d3.select("#d3-data-area").append("svg")
	    .attr("width", width + margin.right + margin.left)
	    .attr("height", height + margin.top + margin.bottom)
	  	.append("g")
	    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

	root = objData;
	root.x0 = height / 2;
	root.y0 = 0;
	  
	update(root);

	d3.select(self.frameElement).style("height", "800px");

	function update(source) {

	  // Compute the new tree layout.
	  var nodes = tree.nodes(root).reverse(),
	      links = tree.links(nodes);

	  // Normalize for fixed-depth.
	  nodes.forEach(function(d) { d.y = d.depth * 180; });

	  // Update the nodesâ€¦
	  var node = svg.selectAll("g.node")
	      .data(nodes, function(d) { return d.id || (d.id = ++i); });

	  // Enter any new nodes at the parent's previous position.
	  var nodeEnter = node.enter().append("g")
	      .attr("class", "node")
	      .attr("transform", function(d) { return "translate(" + source.y0 + "," + source.x0 + ")"; })
	      .on("click", click);

	  nodeEnter.append("circle")
	      .attr("r", 1e-6)
	      .style("fill", function(d) { return d._children ? "#ccff99" : "#fff"; });

	  nodeEnter.append("text")
	      .attr("x", function(d) { return d.children || d._children ? -13 : 13; })
	      .attr("dy", ".35em")
	      .attr("text-anchor", function(d) { return d.children || d._children ? "end" : "start"; })
	      .text(function(d) { return d.name; })
	      .style("fill-opacity", 1e-6)
	     .attr("class", function(d) {
	              if (d.url != null) { return 'hyper'; } 
	         })
	          .on("click", function (d) { 
	              $('.hyper').attr('style', 'font-weight:normal');
	              d3.select(this).attr('style', 'font-weight:bold');

	          }) 
	    ;

	  // Transition nodes to their new position.
	  var nodeUpdate = node.transition()
	      .duration(duration)
	      .attr("transform", function(d) { return "translate(" + d.y + "," + d.x + ")"; });

	  nodeUpdate.select("circle")
	      .attr("r", 10)
	      .style("fill", function(d) { return d._children ? "#ccff99" : "#fff"; });

	  nodeUpdate.select("text")
	      .style("fill-opacity", 1);

	  // Transition exiting nodes to the parent's new position.
	  var nodeExit = node.exit().transition()
	      .duration(duration)
	      .attr("transform", function(d) { return "translate(" + source.y + "," + source.x + ")"; })
	      .remove();

	  nodeExit.select("circle")
	      .attr("r", 1e-6);

	  nodeExit.select("text")
	      .style("fill-opacity", 1e-6);

	  // Update the linksâ€¦
	  var link = svg.selectAll("path.link")
	      .data(links, function(d) { return d.target.id; });

	  // Enter any new links at the parent's previous position.
	  link.enter().insert("path", "g")
	      .attr("class", "link")
	      .attr("d", function(d) {
	        var o = {x: source.x0, y: source.y0};
	        return diagonal({source: o, target: o});
	      });

	  // Transition links to their new position.
	  link.transition()
	      .duration(duration)
	      .attr("d", diagonal);

	  // Transition exiting nodes to the parent's new position.
	  link.exit().transition()
	      .duration(duration)
	      .attr("d", function(d) {
	        var o = {x: source.x, y: source.y};
	        return diagonal({source: o, target: o});
	      })
	      .remove();

	  // Stash the old positions for transition.
	  nodes.forEach(function(d) {
	    d.x0 = d.x;
	    d.y0 = d.y;
	  });
	}

	// Toggle children on click.
	function click(d) {
	  if (d.children) {
	    d._children = d.children;
	    d.children = null;
	  } else {
	    d.children = d._children;
	    d._children = null;
	  }
	  update(d);
	}
};	
</script>	

<script src="/js/plugins/mj-plugins.js"></script>
<script src="<?php echo $this->layout()->cdn_url;?>/js/vendor/tinymce/tinymce.min.js"></script>
<script src="<?php echo $this->layout()->cdn_url;?>/js/vendor/tinymce/jquery.tinymce.min.js"></script>
<script src="<?php echo $this->layout()->cdn_url;?>/js/vendor/angular/plugins/tinymce/tinymceui.js"></script>
<script src="<?php echo $this->layout()->cdn_url;?>/js/vendor/angular/plugins/angular-drag-and-drop-lists/angular-drag-and-drop-lists.min.js"></script>
<script src="<?php echo $this->layout()->cdn_url;?>/js/vendor/angular/plugins/ui-select/dist/select.min.js"></script>

<script src="<?php echo $this->layout()->cdn_url;?>/js/vendor/angular/plugins/angular-slider/rzslider.js"></script>
<link href="<?php echo $this->layout()->cdn_url;?>/js/vendor/angular/plugins/angular-slider/rzslider.css" media="screen" rel="stylesheet" type="text/css">

<script src="<?php echo $this->layout()->cdn_url; ?>/js/vendor/highcharts/highcharts.js"></script>
<script src="<?php echo $this->layout()->cdn_url; ?>/js/vendor/highcharts/data.js"></script>
<script src="<?php echo $this->layout()->cdn_url; ?>/js/vendor/highcharts/drilldown.js"></script>

<script src="/js/angular/comms-admin/journeys/app.js"></script>
<script src="/js/angular/comms-admin/journeys/controllers.js"></script>
<script src="/js/angular/comms-admin/journeys/services.js"></script>	
<?php
echo '<div ng-app="frontEndApp"><div ng-view></div></div>';
return;
