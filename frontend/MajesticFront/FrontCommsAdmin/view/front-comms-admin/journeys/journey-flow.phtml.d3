<h2>Journey Flow</h2>
<?php 
$this->headScript()->appendFile($this->basePath() . "/js/vendor/d3/d3.js");
?>
<<style>
<!--
div.bar {
    display: inline-block;
    width: 20px;
    height: 75px;   /* We'll override this later */
    background-color: teal;
}

.axis path,
.axis line {
    fill: none;
    stroke: black;
    shape-rendering: crispEdges;
}

.axis text {
    font-family: sans-serif;
    font-size: 11px;
}
-->
</style>

<script type="text/javascript">
	jQuery(document).ready(function () {
		var dataset = [];                        //Initialize empty array
		var dataset2 = [];
		for (var i = 0; i < 30; i++) {           //Loop 25 times
		    var newNumber = Math.random() * 30;  //New random number (0-30)
		    dataset.push(Math.round(newNumber));             //Add new number to array
		    dataset2.push(Math.round(newNumber));
		}

		d3.select("#d3-data-area")
			.selectAll("div")
			.data(dataset)
			.enter()
			.append("div")
			.style("height", function (d) { return (d * 5) + "px";})
			.style("margin", "2px")
			.attr("class", "bar");

		//Width and height
		var w = 500;
		var h = 50;
		var barPadding = 1;
		
		//Data
		//var dataset = [ 5, 10, 15, 20, 25 ];
		
		//Create SVG element
		var svg = d3.select("#d3-data-area2")
					.append("svg")
					.attr("width", w)
					.attr("height", h);
	
		var circles = svg.selectAll("circle")
		    .data(dataset)
		    .enter()
		    .append("circle");
	
		circles.attr("cx", function(d, i) {
					return (i * 50) + 25;
				})
			   .attr("cy", h/2)
			   .attr("r", function(d) {
					return d;
			   })
			   .attr("fill", "yellow")
			   .attr("stroke", "orange")
			   .attr("stroke-width", function(d) {
					return d/2;
			   });

		   var w = 500;
		   var h = 100;

		   var svg = d3.select("#d3-data-area3")
		   				.append("svg")
		   				.attr("width", w)
		   				.attr("height", h);

			svg.selectAll("rect")
				.data(dataset)
				.enter()
				.append("rect")
				.attr("x", function (d, i) {return i * 21;})
				.attr("y", function (d) {return h - d;})
				.attr("width", w / dataset.length - barPadding)
				.attr("height", function (d) {return d * 4;})
				.attr("fill", function (d, i) {
					return "rgb(0, 0, " + (i * 10) + ")";
				});

			svg.selectAll("text")
				.data(dataset)
				.enter()
				.append("text")
				.text(function (d) {return d;})
				.attr("x", function (d, i) {
					return i * (w / dataset.length) +5;
				})
				.attr("y", function (d) {
					return (h - (d * 4)) + 15;
				})
				.attr("text-anchor", "middle");


			//Dynamic, random dataset
			var dataset = [];
			var numDataPoints = 50;
			var xRange = Math.random() * 1000;
			var yRange = Math.random() * 1000;
			for (var i = 0; i < numDataPoints; i++) {
			    var newNumber1 = Math.round(Math.random() * xRange);
			    var newNumber2 = Math.round(Math.random() * yRange);
			    dataset.push([newNumber1, newNumber2]);
			}

			var padding = 30;
			var w = 800;
			var h = 400;
			var xScale = d3.scale.linear()
							.domain([0, d3.max(dataset, function (d) { return d[0];})])
							.range([padding, w - padding * 2]);

			var yScale = d3.scale.linear()
						.domain([0, d3.max(dataset, function (d) {return d[1];})])
						.range([h - padding, padding]);	

			var rScale = d3.scale.linear()
            			.domain([0, d3.max(dataset, function(d) { return d[1]; })])
            			.range([2, 20]);

            var xAxis = d3.svg.axis();
            xAxis.scale(xScale);
            xAxis.orient("bottom");
            xAxis.ticks(5);
            xAxis.tickFormat(d3.format(".1"));

            var yAxis = d3.svg.axis()
            				.scale(yScale)
            				.orient("left")
            				.ticks(5);

            
            var svg = d3.select("#d3-data-area4")
            			.append("svg")
            			.attr("width", w)
            			.attr("height", h);

			svg.selectAll("circle")
				.data(dataset)
				.enter()
				.append("circle")
				.attr("cx", function (d) {return xScale(d[0]);})
				.attr("cy", function (d) {return yScale(d[1]);})
				.attr("r", function (d) {
					return rScale(d[1]);
				});

/*			svg.selectAll("text")
				.data(dataset)
				.enter()
				.append("text")
				.text(function (d) {
					return d[0] + ", " + d[1];
				})
				.attr("x", function (d) {
					return xScale(d[0]) + 20;
				})
				.attr("y", function (d) {
					return yScale(d[1]);
				})
				.attr("font-family", "arial")
				.attr("font-size", "11px")
				.attr("fill", "red");*/

			svg.append("g")
				.attr("class", "axis")
				.attr("transform", "translate(0, " + (h-padding) + ")")
				.call(xAxis);

			svg.append("g")
				.attr("class", "axis")
				.attr("transform", "translate(" + padding + ",0)")
				.call(yAxis);
			
		});
</script>

<div id="d3-data-area"></div>
<div id="d3-data-area2"></div>
<div id="d3-data-area3"></div>
<div id="d3-data-area4"></div>